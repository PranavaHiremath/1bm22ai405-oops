# -*- coding: utf-8 -*-
"""oops_lab_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jMcXXmx3X__6tp4ejJXGp-xSvkiYpzor
"""

def max(list1):
  max = list1[0]

  for x in list1:
    if x > max:
      max = x

  return max


list1 = [10, 30, 40, 56, 13]
print("largest element in the list is :", max(list1))

import math

def hexagon_area(length):
  area = (3* math.sqrt(3)* (length** 2)) /2
  return area

side = 5
result = hexagon_area(side)
print(f'the area of the regular hexagon with side length {side } is {result}')

import re

def is_valid_email(email):
  pattern = r'^[\w\.-]+@[a-zA-Z0-9-]+\.[a-zA-Z]{2,}$'

  if re.match(pattern, email):
        return True
  else:
        return False

email_address = "email@email.com"
result = is_valid_email(email_address)

if result:
    print(f"The email '{email_address}' is valid.")
else:
    print(f"The email '{email_address}' is not valid.")

def encrypt(text, shift):
    encrypted_text = ""
    for char in text:

        if char.isupper():
            encrypted_text += chr((ord(char) + shift - 65) % 26 + 65)

        elif char.islower():
            encrypted_text += chr((ord(char) + shift - 97) % 26 + 97)
        else:

            encrypted_text += char
    return encrypted_text

def decrypt(encrypted_text, shift):

    return encrypt(encrypted_text, -shift)

text = "Hello, World!"
shift_value = 5


encrypted = encrypt(text, shift_value)
print("Encrypted:", encrypted)

decrypted = decrypt(encrypted, shift_value)
print("Decrypted:", decrypted)

def is_palindrome(s):
    return s == s[::-1]

def get_palindrome(text):
    palindromes = []
    words = text.split()

    for word in words:
        if is_palindrome(word):
            palindromes.append(word)

    return palindromes


input_text = "madam refers radar to level noon kayak"
result = get_palindrome(input_text)
print("Palindromes:", result)